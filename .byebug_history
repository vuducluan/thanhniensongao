continue
builder.object.user_id
builder.object
builder
continue
@user_date
@user_date.count
continue
@user_date.count
@user_date
continue
UserDate.where(user_id: user.id, eating_day_id: eating_day.id).count
UserDate.where(user_id: user.id, eating_day_id: eating_day.id)
UserDate.first
@user_date = UserDate.where(user, eating_day).count
UserDate.where(user, eating_day).count
UserDate.where(user, eating_day)
@user_date
user
continue
@money
continue
load_and_authorize_resource
continue
load_and_authorize_resource
continue
load_and_authorize_resource
@user
continue
builder.object.user.name
f.object.user.name
f.object
continue
builder
@eating_day.users.count
@eating_day.users
@eating_day.user
@eating_day
params
self
continue
@eating_day
continue
@eating_day
continue
params
continue
params
continue
@eating_day.user_dates.where(eated: true).count
@eating_day.user_dates.where(eated: true)
@eating_day.user_dates.count
@eating_day.user_dates
params
continue
@checking.first
@checking.first.user_id
@checking.first
@checking
@checking.present?
continue
params[:eating_day][:user_dates_attributes]
params[:eating_day]
params[eating_day]
params[eating_day][user_dates_attributes]
params[user_dates_attributes]
params[:user_dates_attributes]
params
continue
params
continue
builder.check_box :user_id, {checked: false}, user.id, 0
continue
User.all
continue
user_date.eated
user_date
continue
self
params
@meal_find = EatingDay.find date: params[:date], meal: prams[:meal]
@meal_find
continue
user_date.eating_day.meal == 2 
continue
user_date.eating_day
user_date
user_date.eating_day.meal == 2
@count_date_meal == 1
continue
index%2==1 && user_date.eating_day.meal==2
user_date.eating_day.meal==2
&& user_date.eating_day.meal==2
index%2==1 && user_date.eating_day.meal==2
index%2==1
index%2==1 & user_date.eating_day.meal==2
continue
index%2==1
if index%2==1
if index%2==1) && user_date.eating_day.meal==2
if index%2==1) & user_date.eating_day.meal==2
if index%2==1) & (user_date.eating_day.meal==2
if(index%2==1) & (user_date.eating_day.meal==2)
continue
if(index%2==1) & (user_date.eating_day.meal==2)
continue
EatingDay.all.where(date: @check_date).count
EatingDay.where(date: @check_date).count
continue
check_date
continue
check_date
continue
@eating_day.save
params
@eating_day.save
params[:meal]
params
continue
user.eating_days.first
user.eating_days
user
continue
user.eating_days
user.eating_day
user
continue
EatingDay.all
@eating_day
eating_day
Eating day.all
params
continue
@eating_day
params
